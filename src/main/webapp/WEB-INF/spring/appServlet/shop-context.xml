<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/websocket https://www.springframework.org/schema/websocket/spring-websocket.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="team1.project.bookshop.shop.controller" />

	<!-- 공통관심 사항인 Inquiry_categoryAdivce를 Advice로 등록하자 -->
	<beans:bean id="inquiry_categoryAdvice"
		class="team1.project.bookshop.aop.Inquiry_categoryAdvice" />
	
 	<!-- bookshop 카테고리 가져오기 관점 정의 -->
 	<aop:config>
		<aop:aspect ref="inquiry_categoryAdvice" id="inquiry_categoryAspect">
			<aop:pointcut expression="execution(public * team1.project.bookshop.shop.controller..*(..))" id="inquiry_categoryPointcut"/>
			<aop:around method="getInquiry_categoryList" pointcut-ref="inquiry_categoryPointcut"/>				
		</aop:aspect> 	 	
 	</aop:config>

	<!-- Rest 요청에 대한 글로벌 예외를 처리할 빈 등록 json 등의 데이터로 결과를 보여주는 예외 객체 -->
	<beans:bean 
		id="restShopGlobalException" 
		class="team1.project.bookshop.aop.RestShopGlobalException"/>
	
	<!-- 글로벌 예외 jsp로 결과를 보여주는 예외객체 -->
	<beans:bean
		id="shopGlobalException" 
		class="team1.project.bookshop.aop.ShopGlobalException"/>		
	
</beans:beans>
